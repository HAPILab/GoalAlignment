
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Domain file automatically generated by the Tarski FSTRIPS writer
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (domain test_domain)
    (:requirements :typing :equality)
    (:types
        rover - object
        waypoint - object
        store - object
        camera - object
        mode - object
        lander - object
        objective - object
    )

    (:constants
        
    )

    (:predicates
        (at ?x1 - rover ?x2 - waypoint)
        (at_lander ?x1 - lander ?x2 - waypoint)
        (can_traverse ?x1 - rover ?x2 - waypoint ?x3 - waypoint)
        (equipped_for_soil_analysis ?x1 - rover)
        (equipped_for_rock_analysis ?x1 - rover)
        (equipped_for_imaging ?x1 - rover)
        (empty ?x1 - store)
        (have_rock_analysis ?x1 - rover ?x2 - waypoint)
        (have_soil_analysis ?x1 - rover ?x2 - waypoint)
        (full ?x1 - store)
        (calibrated ?x1 - camera ?x2 - rover)
        (supports ?x1 - camera ?x2 - mode)
        (available ?x1 - rover)
        (visible ?x1 - waypoint ?x2 - waypoint)
        (have_image ?x1 - rover ?x2 - objective ?x3 - mode)
        (communicated_soil_data ?x1 - waypoint)
        (communicated_rock_data ?x1 - waypoint)
        (communicated_image_data ?x1 - objective ?x2 - mode)
        (at_soil_sample ?x1 - waypoint)
        (at_rock_sample ?x1 - waypoint)
        (visible_from ?x1 - objective ?x2 - waypoint)
        (store_of ?x1 - store ?x2 - rover)
        (calibration_target ?x1 - camera ?x2 - objective)
        (on_board ?x1 - camera ?x2 - rover)
        (channel_free ?x1 - lander)
    )

    (:functions
        
    )

    

    
    (:action navigate
     :parameters (?x - rover ?y - waypoint ?z - waypoint)
     :precondition (and (can_traverse ?x ?y ?z) (available ?x) (at ?x ?y) (visible ?y ?z))
     :effect (and
        (at ?x ?z)
        (not (at ?x ?y)))
    )


    (:action sample_soil
     :parameters (?x - rover ?s - store ?p - waypoint)
     :precondition (and (at ?x ?p) (at_soil_sample ?p) (equipped_for_soil_analysis ?x) (empty ?s))
     :effect (and
        (full ?s)
        (have_soil_analysis ?x ?p)
        (not (empty ?s))
        (not (at_soil_sample ?p)))
    )


    (:action sample_rock
     :parameters (?x - rover ?s - store ?p - waypoint)
     :precondition (and (at ?x ?p) (at_rock_sample ?p) (store_of ?s ?x) (empty ?s))
     :effect (and
        (full ?s)
        (have_rock_analysis ?x ?p)
        (not (empty ?s))
        (not (at_rock_sample ?p)))
    )


    (:action drop
     :parameters (?x - rover ?s - store)
     :precondition (store_of ?s ?x)
     :effect (and
        (empty ?s)
        (not (full ?s)))
    )


    (:action calibrate
     :parameters (?r - rover ?i - camera ?t - objective ?w - waypoint)
     :precondition (and (equipped_for_imaging ?r) (at ?r ?w) (visible_from ?t ?w) (on_board ?i ?r))
     :effect (and
        (calibrated ?i ?r))
    )


    (:action take_image
     :parameters (?r - rover ?p - waypoint ?o - objective ?i - camera ?m - mode)
     :precondition (and (calibrated ?i ?r) (on_board ?i ?r) (equipped_for_imaging ?r) (supports ?i ?m) (visible_from ?o ?p) (at ?r ?p))
     :effect (and
        (have_image ?r ?o ?m)
        (not (calibrated ?i ?r)))
    )


    (:action communicate_soil_data
     :parameters (?r - rover ?l - lander ?p - waypoint ?w - waypoint ?y - waypoint)
     :precondition (and (at ?r ?w) (at_lander ?l ?y) (have_soil_analysis ?r ?p) (visible ?w ?y) (available ?r) (channel_free ?l))
     :effect (and
        (channel_free ?l)
        (communicated_soil_data ?p)
        (available ?r)
        (not (available ?r))
        (not (channel_free ?l)))
    )


    (:action communicate_rock_data
     :parameters (?r - rover ?l - lander ?p - waypoint ?w - waypoint ?y - waypoint)
     :precondition (and (at ?r ?w) (at_lander ?l ?y) (have_rock_analysis ?r ?p) (visible ?w ?y) (available ?r) (channel_free ?l))
     :effect (and
        (channel_free ?l)
        (communicated_rock_data ?p)
        (available ?r)
        (not (available ?r))
        (not (channel_free ?l)))
    )


    (:action communicate_image_data
     :parameters (?r - rover ?l - lander ?o - objective ?m - mode ?w - waypoint ?y - waypoint)
     :precondition (and (at ?r ?w) (at_lander ?l ?y) (have_image ?r ?o ?m) (visible ?w ?y) (available ?r) (channel_free ?l))
     :effect (and
        (channel_free ?l)
        (communicated_image_data ?o ?m)
        (available ?r)
        (not (available ?r))
        (not (channel_free ?l)))
    )

)